/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/business_people.glb --types --output src/BusinessPeople.tsx 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { motion as motion3d } from 'framer-motion-3d';


type GLTFResult = GLTF & {
  nodes: {
    ['2__0']: THREE.Mesh
    ['7__0']: THREE.Mesh
    ['8__0']: THREE.Mesh
  }
  materials: {}
  animations: any[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function People(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/business_people.glb') as GLTFResult
  return (
    <motion3d.group initial={{ scale: 0 }} animate={{ scale: 0 }} dispose={null} scale={0.1} position={[0, 1.1, 0]}>
      <mesh geometry={nodes['2__0'].geometry} material={nodes['2__0'].material} position={[-0.809, 0, -0.827]} rotation={[-Math.PI, 0.047, -Math.PI]} scale={0.01} />
      <mesh geometry={nodes['7__0'].geometry} material={nodes['7__0'].material} position={[-0.598, 2.02, 0.843]} scale={0.01} />
      <mesh geometry={nodes['8__0'].geometry} material={nodes['8__0'].material} position={[1.174, 2.049, -0.083]} scale={0.01} />
    </motion3d.group>
  )
}

useGLTF.preload('/business_people.glb')
