/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/business_people.glb --types --output src/BusinessPeople2.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['2__0']: THREE.Mesh
    ['7__0']: THREE.Mesh
    ['8__0']: THREE.Mesh
    brain: THREE.Mesh
  }
  materials: {}
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/business_people.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['2__0'].geometry} material={nodes['2__0'].material} position={[-0.646, 1.945, -0.971]} rotation={[-Math.PI, 0.047, -Math.PI]} scale={0.01} />
      <mesh geometry={nodes['7__0'].geometry} material={nodes['7__0'].material} position={[-0.598, 2.02, 0.843]} scale={0.01} />
      <mesh geometry={nodes['8__0'].geometry} material={nodes['8__0'].material} position={[1.174, 2.049, -0.083]} scale={0.01} />
      <mesh geometry={nodes.brain.geometry} material={nodes.brain.material} position={[-0.972, 3.608, -0.906]} rotation={[2.671, -1.23, 2.696]} scale={[0.18, 0.174, 0.165]} />
    </group>
  )
}

useGLTF.preload('/business_people.glb')
