/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/GePoVe.glb --types --output src/GePoVe.tsx 
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.SkinnedMesh
    Cube001: THREE.SkinnedMesh
    Cube002: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
    mixamorigHips_1: THREE.Bone
    mixamorigHips_2: THREE.Bone
  }
  materials: {}
  animations: GLTFAction[]
}

type ActionName = 'Armature|mixamo.com|Layer0' | 'Armature.001|mixamo.com|Layer0' | 'Armature.002|mixamo.com|Layer0'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function GePoVe(props: JSX.IntrinsicElements['group']) {
  const group: any = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/GePoVe.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  const mat = <meshStandardMaterial color="white" toneMapped />
  useEffect(() => {
    actions['Armature|mixamo.com|Layer0']?.play()
    actions['Armature.001|mixamo.com|Layer0']?.play()
    actions['Armature.002|mixamo.com|Layer0']?.play()
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Cube" geometry={nodes.Cube.geometry} skeleton={nodes.Cube.skeleton} >{mat}</skinnedMesh>
        </group>
        <group name="Armature001" position={[4.661, 0, -6.295]} rotation={[Math.PI / 2, 0, -2.204]} scale={0.01}>
          <primitive object={nodes.mixamorigHips_1} />
          <skinnedMesh name="Cube001" geometry={nodes.Cube001.geometry} skeleton={nodes.Cube001.skeleton} >{mat}</skinnedMesh>
        </group>
        <group name="Armature002" position={[-4.465, 0, -6.295]} rotation={[Math.PI / 2, 0, 2.464]} scale={0.01}>
          <primitive object={nodes.mixamorigHips_2} />
          <skinnedMesh name="Cube002" geometry={nodes.Cube002.geometry} skeleton={nodes.Cube002.skeleton} >{mat}</skinnedMesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/GePoVe.glb')
